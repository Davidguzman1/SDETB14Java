Types of variables in java with respect to their scope
There are three types of vairiables in java with respect
to their scope. Local,Instance, and Static

Local Var:
    if a variable declared inside a block of code like method, loop, if cond,
    They are called local Var
Up side of a local var:
    The upside is they exist for a very short amount of time in the memory
    which means other programs on our computer can use that memory
Down side of local Var:
    Their scope is very limited. only inside that block of code in which they creates.
    we can't access them outside that block
When to use:
    We should always try to use local Var over instance var whenever it
    is possible

Instance Var:
    The variables which are declared inside a class but outside of block of code
    are called instance variables
Up side:
    We can use these variables inside any block of code that is inside that class
Down side:
    They occupy the memory for longer that a local variable.
When to use:
    When we need to share a value between two or more method then we should go with the instance var
    When we are planning to create mulitple objects of a class and it is possible that all the objects can have different value
    for that variable

Static Var:
    An instance variable with static keyword is called a static variable
Up side:
    We can share data across the objects with the help of static variables
Down side:
    They occupy the memory for the longest amount of time
When to use:
    When we want to share something across all the methods
    That has the same value to it
==================================================================================
Access Modifiers:
    Access modifiers are keywords which control the access of fields or methods or the class itself
    There are  four access levels and three access modifier keywords. These are only applicable to instance and static vars

Private:
    Private is the most restricted one. if we use private keyword with any variable or method
    we can only access it from the same class
When to use:
    We should always try to create variables as private
Up side:
    The data we store in the private variables are secured
Down side:
    You can only use it inside the class
Protected


Default(not a keyword)
    Default is not a keyword. whenever we don't assign any access modifier keyword like private or
    public Java assigns default access to those variables or methods
    The variables or methods that have default access level can accessed within the same class or in any other
    class that is present inside the same package
Public
    Public access most unrestricted access modifier. once used with an variable or method we can access the variable
    or method anywhere in our project


    Note:
    inside a file/clase there can only be 1 public class